<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Veeresh Taranalli</title>
    <link>/post/</link>
    <description>Recent content in Posts on Veeresh Taranalli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright> &amp;copy; Veeresh Taranalli</copyright>
    <lastBuildDate>Sun, 30 Aug 2015 00:00:00 -0700</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exploring Trends in Polar Codes Research</title>
      <link>/post/exploring-trends-polar-codes-research/</link>
      <pubDate>Sun, 30 Aug 2015 00:00:00 -0700</pubDate>
      
      <guid>/post/exploring-trends-polar-codes-research/</guid>
      <description>Polar codes are easily the most significant recent development in the areas of coding and information theory research. A wide variety of applications have been proposed for polar codes mainly due to their capacity achieving property for many different communication channels.
In this post, we explore the trends in research publications on the topic of polar codes in their brief but exciting history.
This post also serves as a tutorial in exploratory data analysis using Python and Pandas along with Matplotlib for plotting.</description>
    </item>
    
    <item>
      <title>Multipath Fading Channels and 3GPP-LTE Design</title>
      <link>/post/multipath-fading-channels-and-3gpp-lte-design/</link>
      <pubDate>Sun, 08 Apr 2012 00:00:00 -0700</pubDate>
      
      <guid>/post/multipath-fading-channels-and-3gpp-lte-design/</guid>
      <description>This article attempts to explain the rationale behind choosing particular parameter values in the design of the 3GPP-LTE standard using the concepts related to the effects of multipath fading channels in wireless communications.
Multipath fading channels are often defined by four key parameters in the theory of wireless communications. These are the Delay Spread ($T_d$) and the Coherence Bandwidth ($W_c$) defining the multipath characteristics of the wireless channel; the Doppler Spread ($D_s$) and the Coherence Time ($T_c$) defining the fading characteristics of the wireless channel.</description>
    </item>
    
    <item>
      <title>Carrier Frequency Offset in Single Carrier and OFDM Systems</title>
      <link>/post/carrier-frequency-offset-ofdm/</link>
      <pubDate>Mon, 02 Apr 2012 00:00:00 -0700</pubDate>
      
      <guid>/post/carrier-frequency-offset-ofdm/</guid>
      <description>Carrier Frequency Offset (CFO) is one of the most common impairments found in a communication system. As the name suggests, it is due to the mismatch between the carrier frequencies used by the transmitter and the receiver. The effects produced by CFO on single carrier and OFDM systems is very different. To illustrate this, a simple simulation of a 64-QAM based single carrier and OFDM system using CommPy is shown below.</description>
    </item>
    
    <item>
      <title>The Viterbi Algorithm - Illustrated!</title>
      <link>/post/viterbi-algorithm-illustrated/</link>
      <pubDate>Tue, 27 Mar 2012 00:00:00 -0700</pubDate>
      
      <guid>/post/viterbi-algorithm-illustrated/</guid>
      <description>It is often helpful to visualize the operation of the Viterbi Algorithm used in the decoding of convolutional codes. Here is an attempt to do the same using Python, Matplotlib, NumPy, SciPy and CommPy.
Below is a video which shows one such illustration of the Viterbi Algorithm in action using the following parameters.
The convolutional code is represented by the encoder matrix, $$ G(D)=[1+D^2,1+D+D^2] $$ Let us assume that the transmitted message is [1, 0, 0, 0] and hence the corresponding codeword is [11, 01, 11, 00].</description>
    </item>
    
    <item>
      <title>Plotting Trellis Diagrams with CommPy in Python</title>
      <link>/post/plotting-trellis-diagrams-commpy/</link>
      <pubDate>Tue, 20 Mar 2012 00:00:00 -0700</pubDate>
      
      <guid>/post/plotting-trellis-diagrams-commpy/</guid>
      <description>A trellis diagram is a representation of a convolutional code. During the study of convolutional and turbo codes, one often encounters situations where we would like to visualize the trellis diagram representation of a simple 4-state or an 8-state convolutional code.
CommPy is an open source toolkit implementing digital communication algorithms in Python using NumPy,SciPy, Matplotlib and Cython. The visualize function in CommPy&amp;rsquo;s Trellis class is an attempt to make plotting trellis diagrams easy and simple.</description>
    </item>
    
  </channel>
</rss>